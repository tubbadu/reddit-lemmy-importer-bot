import { ListingType } from 'lemmy-js-client';
import { StorageInfo } from './db';
import { BotFederationOptions, BotHandlers, BotInstanceList, Vote, InternalHandlers } from './types';
export declare const getSecureWebsocketUrl: (instanceDomain: string) => string;
export declare const getInsecureWebsocketUrl: (instanceDomain: string) => string;
export declare const correctVote: (vote: number) => Vote;
export declare const futureDaysToUnixTime: (days?: number) => number | undefined;
export declare const shouldProcess: ({ exists, reprocessTime }: StorageInfo) => boolean | null;
export declare const parseHandlers: (handlers?: BotHandlers) => InternalHandlers;
export declare const getListingType: (options: BotFederationOptions) => ListingType;
export declare function removeItem<T>(items: T[], itemPredicate: (item: T) => boolean): void;
export declare const stripPort: (instance: string) => string;
export declare const extractInstanceFromActorId: (actorId: string) => string;
export declare const getInstanceRegex: (instances: BotInstanceList) => RegExp;
